@startuml open-reserved-table-flow
title Flow: Cashier m·ªü b√†n cho kh√°ch ƒë√£ ƒë·∫∑t tr∆∞·ªõc (RESERVED ‚Üí OCCUPIED)

actor Cashier
participant "Browser" as Browser
participant "CashierDashboardController" as Controller
participant "ReservationService" as Service
participant "ReservationSchedulerService" as Scheduler
participant "TableRepository" as TableRepo
participant "ReservationRepository" as ReservRepo
database "Database" as DB

== B∆∞·ªõc 1: Kh√°ch h√†ng ƒë·∫øn nh√† h√†ng ==

note over Cashier
  Kh√°ch h√†ng ƒë·∫øn v√† b√°o v·ªõi Cashier:
  "T√¥i ƒë√£ ƒë·∫∑t b√†n tr∆∞·ªõc"
end note

Cashier -> Browser: Click "Xem ƒë∆°n h√†ng ƒë·∫∑t tr∆∞·ªõc"\nho·∫∑c click v√†o b√†n RESERVED\nr·ªìi "Xem ƒë∆°n ƒë·∫∑t tr∆∞·ªõc"

Browser -> Controller: GET /cashier/reservations/upcoming\nho·∫∑c /cashier/tables/{id}/reservations
activate Controller

Controller -> Service: getUpcomingReservations()\nho·∫∑c getReservationsByTableId(tableId)
activate Service
Service -> ReservRepo: findUpcomingReservations(now)\nho·∫∑c findActiveReservationsByTableId(tableId)
ReservRepo -> DB: SELECT * FROM reservation\nWHERE status = 'CONFIRMED'...
DB --> ReservRepo: List<Reservation>
ReservRepo --> Service: List<Reservation>
Service --> Controller: List<ReservationDTO>
deactivate Service

Controller --> Browser: Render HTML v·ªõi danh s√°ch reservations
deactivate Controller

Browser --> Cashier: Hi·ªÉn th·ªã reservation cards\nv·ªõi n√∫t "üîì M·ªü b√†n cho kh√°ch"

== B∆∞·ªõc 2: Cashier x√°c nh·∫≠n v√† m·ªü b√†n ==

Cashier -> Browser: Click n√∫t "üîì M·ªü b√†n cho kh√°ch"

Browser -> Browser: JavaScript confirm dialog:\n"X√°c nh·∫≠n kh√°ch ƒë√£ ƒë·∫øn v√† m·ªü b√†n?"

alt Cashier ch·ªçn "OK"
    Browser -> Controller: POST /cashier/reservations/{id}/open\n(v·ªõi reservationId, returnUrl)
    activate Controller
    
    Controller -> Service: openTableForGuestWithReservation(reservationId)
    activate Service
    
    ' B∆∞·ªõc 1: Cancel scheduled NO_SHOW task
    Service -> Scheduler: cancelNoShowCheck(reservationId)
    activate Scheduler
    note right of Scheduler
      Cancel task t·ª± ƒë·ªông ƒë√°nh d·∫•u NO_SHOW
      v√¨ kh√°ch ƒë√£ ƒë·∫øn r·ªìi
    end note
    Scheduler -> Scheduler: scheduledTasks.get(reservationId)
    Scheduler -> Scheduler: future.cancel(false)
    Scheduler -> Scheduler: scheduledTasks.remove(reservationId)
    Scheduler --> Service: void
    deactivate Scheduler
    
    ' B∆∞·ªõc 2: Update Reservation status
    Service -> ReservRepo: findById(reservationId)
    ReservRepo -> DB: SELECT * FROM reservation\nWHERE id = ?
    DB --> ReservRepo: Reservation
    ReservRepo --> Service: Reservation (status=CONFIRMED)
    
    Service -> Service: reservation.setStatus(ARRIVED)
    Service -> ReservRepo: save(reservation)
    ReservRepo -> DB: UPDATE reservation\nSET status = 'ARRIVED'\nWHERE id = ?
    DB --> ReservRepo: Success
    
    ' B∆∞·ªõc 3: Update Table status
    Service -> Service: table = reservation.getDiningTable()
    Service -> Service: table.setTableStatus(OCCUPIED)
    Service -> TableRepo: save(table)
    TableRepo -> DB: UPDATE Dining_Table\nSET table_status = 'OCCUPIED'\nWHERE id = ?
    DB --> TableRepo: Success
    
    ' B∆∞·ªõc 4: Broadcast via WebSocket (optional)
    Service -> Service: broadcastTableStatusToGuests()\nbroadcastTableStatusToCashier()
    note right of Service
      Th√¥ng b√°o cho c√°c Cashier kh√°c
      v√† Guest page qua WebSocket
    end note
    
    Service --> Controller: void
    deactivate Service
    
    Controller -> Controller: redirectAttributes.addFlashAttribute(\n"successMessage",\n"ƒê√£ m·ªü b√†n cho kh√°ch. Ch√∫c ph·ª•c v·ª• vui v·∫ª!")
    
    Controller --> Browser: 302 Redirect to returnUrl\n(ho·∫∑c /cashier)
    deactivate Controller
    
    Browser -> Controller: GET returnUrl
    Controller --> Browser: Render HTML v·ªõi success message
    
    Browser --> Cashier: ‚úÖ "ƒê√£ m·ªü b√†n cho kh√°ch.\nCh√∫c ph·ª•c v·ª• vui v·∫ª!"
    
    note over Cashier
      B√†n gi·ªù c√≥ status OCCUPIED
      Reservation c√≥ status ARRIVED
      Scheduled NO_SHOW task ƒë√£ b·ªã cancel
    end note
    
else Cashier ch·ªçn "Cancel"
    Browser --> Cashier: Kh√¥ng l√†m g√¨ c·∫£
end

@enduml



